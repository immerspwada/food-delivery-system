const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
const supabase = createClient(supabaseUrl, supabaseKey);

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢
const testOrders = [
  {
    customer_name: '‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ',
    customer_phone: '081-234-5678',
    customer_address: '123 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡πÅ‡∏Ç‡∏ß‡∏á‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢ ‡πÄ‡∏Ç‡∏ï‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10110',
    status: 'pending',
    notes: '‡πÄ‡∏ú‡πá‡∏î‡∏ô‡πâ‡∏≠‡∏¢ ‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡∏ú‡∏±‡∏Å',
    items: [
      { menu_item_name: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏Å‡∏∏‡πâ‡∏á', quantity: 2, unit_price: 89 },
      { menu_item_name: '‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏Å‡∏∏‡πâ‡∏á', quantity: 1, unit_price: 120 },
      { menu_item_name: '‡∏ô‡πâ‡∏≥‡∏°‡∏∞‡∏ô‡∏≤‡∏ß‡πÇ‡∏ã‡∏î‡∏≤', quantity: 3, unit_price: 35 }
    ]
  },
  {
    customer_name: '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡∏£‡∏±‡∏Å‡∏™‡∏∞‡∏≠‡∏≤‡∏î',
    customer_phone: '082-345-6789',
    customer_address: '456 ‡∏ñ‡∏ô‡∏ô‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏° 4 ‡πÅ‡∏Ç‡∏ß‡∏á‡∏™‡∏µ‡∏•‡∏° ‡πÄ‡∏Ç‡∏ï‡∏ö‡∏≤‡∏á‡∏£‡∏±‡∏Å ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10500',
    status: 'confirmed',
    notes: '‡πÑ‡∏°‡πà‡πÄ‡∏ú‡πá‡∏î ‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡∏´‡∏≠‡∏°',
    items: [
      { menu_item_name: '‡∏ú‡∏±‡∏î‡πÑ‡∏ó‡∏¢‡∏Å‡∏∏‡πâ‡∏á‡∏™‡∏î', quantity: 1, unit_price: 95 },
      { menu_item_name: '‡∏™‡πâ‡∏°‡∏ï‡∏≥‡πÑ‡∏ó‡∏¢', quantity: 1, unit_price: 60 },
      { menu_item_name: '‡∏ä‡∏≤‡πÑ‡∏ó‡∏¢', quantity: 2, unit_price: 25 }
    ]
  },
  {
    customer_name: '‡∏ô‡∏≤‡∏¢‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡∏µ',
    customer_phone: '083-456-7890',
    customer_address: '789 ‡∏ñ‡∏ô‡∏ô‡∏£‡∏±‡∏ä‡∏î‡∏≤‡∏†‡∏¥‡πÄ‡∏©‡∏Å ‡πÅ‡∏Ç‡∏ß‡∏á‡∏´‡πâ‡∏ß‡∏¢‡∏Ç‡∏ß‡∏≤‡∏á ‡πÄ‡∏Ç‡∏ï‡∏´‡πâ‡∏ß‡∏¢‡∏Ç‡∏ß‡∏≤‡∏á ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10310',
    status: 'preparing',
    notes: '‡πÄ‡∏ú‡πá‡∏î‡∏°‡∏≤‡∏Å ‡πÉ‡∏™‡πà‡∏ú‡∏±‡∏Å‡πÄ‡∏¢‡∏≠‡∏∞‡πÜ',
    items: [
      { menu_item_name: '‡πÅ‡∏Å‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏´‡∏ß‡∏≤‡∏ô‡πÑ‡∏Å‡πà', quantity: 1, unit_price: 85 },
      { menu_item_name: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏™‡∏ß‡∏¢', quantity: 2, unit_price: 15 },
      { menu_item_name: '‡∏ô‡πâ‡∏≥‡πÄ‡∏õ‡∏•‡πà‡∏≤', quantity: 1, unit_price: 10 }
    ]
  },
  {
    customer_name: '‡∏Ñ‡∏∏‡∏ì‡∏´‡∏ç‡∏¥‡∏á ‡∏≠‡∏£‡πà‡∏≠‡∏¢‡∏°‡∏≤‡∏Å',
    customer_phone: '084-567-8901',
    customer_address: '321 ‡∏ñ‡∏ô‡∏ô‡∏û‡∏´‡∏•‡πÇ‡∏¢‡∏ò‡∏¥‡∏ô ‡πÅ‡∏Ç‡∏ß‡∏á‡∏™‡∏≤‡∏°‡πÄ‡∏™‡∏ô‡πÉ‡∏ô ‡πÄ‡∏Ç‡∏ï‡∏û‡∏ç‡∏≤‡πÑ‡∏ó ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10400',
    status: 'ready',
    notes: '‡∏õ‡∏Å‡∏ï‡∏¥',
    items: [
      { menu_item_name: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏°‡∏±‡∏ô‡πÑ‡∏Å‡πà', quantity: 1, unit_price: 50 },
      { menu_item_name: '‡πÑ‡∏Å‡πà‡∏¢‡πà‡∏≤‡∏á', quantity: 1, unit_price: 80 },
      { menu_item_name: '‡∏ô‡πâ‡∏≥‡∏™‡πâ‡∏°', quantity: 1, unit_price: 30 }
    ]
  },
  {
    customer_name: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ VIP',
    customer_phone: '085-678-9012',
    customer_address: '654 ‡∏ñ‡∏ô‡∏ô‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ ‡πÅ‡∏Ç‡∏ß‡∏á‡∏°‡∏±‡∏Å‡∏Å‡∏∞‡∏™‡∏±‡∏ô ‡πÄ‡∏Ç‡∏ï‡∏£‡∏≤‡∏ä‡πÄ‡∏ó‡∏ß‡∏µ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10400',
    status: 'delivering',
    notes: '‡∏™‡πà‡∏á‡πÄ‡∏£‡πá‡∏ß‡πÜ ‡∏´‡∏ô‡πà‡∏≠‡∏¢',
    items: [
      { menu_item_name: '‡∏™‡πÄ‡∏ï‡πá‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠', quantity: 1, unit_price: 250 },
      { menu_item_name: '‡∏™‡∏•‡∏±‡∏î‡∏ú‡∏±‡∏Å', quantity: 1, unit_price: 45 },
      { menu_item_name: '‡∏ô‡πâ‡∏≥‡∏ú‡∏•‡πÑ‡∏°‡πâ', quantity: 2, unit_price: 40 }
    ]
  },
  {
    customer_name: '‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏°‡πà‡∏ö‡πâ‡∏≤‡∏ô',
    customer_phone: '086-789-0123',
    customer_address: '987 ‡∏ñ‡∏ô‡∏ô‡∏•‡∏≤‡∏î‡∏û‡∏£‡πâ‡∏≤‡∏ß ‡πÅ‡∏Ç‡∏ß‡∏á‡∏à‡∏≠‡∏°‡∏û‡∏• ‡πÄ‡∏Ç‡∏ï‡∏à‡∏ï‡∏∏‡∏à‡∏±‡∏Å‡∏£ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10900',
    status: 'delivered',
    notes: '‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πà‡∏∞',
    items: [
      { menu_item_name: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏õ‡∏π', quantity: 1, unit_price: 150 },
      { menu_item_name: '‡πÅ‡∏Å‡∏á‡∏™‡πà‡∏°‡∏ú‡∏±‡∏Å‡∏£‡∏ß‡∏°', quantity: 1, unit_price: 89 },
      { menu_item_name: '‡∏ô‡πâ‡∏≥‡∏Ç‡∏¥‡∏á‡πÅ‡∏õ‡∏£‡∏£‡∏π‡∏õ', quantity: 1, unit_price: 25 }
    ]
  },
  {
    customer_name: '‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡∏´‡∏¥‡∏ß‡∏Ç‡πâ‡∏≤‡∏ß',
    customer_phone: '087-890-1234',
    customer_address: '147 ‡∏ñ‡∏ô‡∏ô‡∏á‡∏≤‡∏°‡∏ß‡∏á‡∏®‡πå‡∏ß‡∏≤‡∏ô ‡πÅ‡∏Ç‡∏ß‡∏á‡∏•‡∏≤‡∏î‡∏¢‡∏≤‡∏ß ‡πÄ‡∏Ç‡∏ï‡∏à‡∏ï‡∏∏‡∏à‡∏±‡∏Å‡∏£ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10900',
    status: 'cancelled',
    notes: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏á‡∏¥‡∏ô',
    items: [
      { menu_item_name: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏Ñ‡∏•‡∏∏‡∏Å‡∏Å‡∏∞‡∏õ‡∏¥', quantity: 1, unit_price: 85 },
      { menu_item_name: '‡∏ô‡πâ‡∏≥‡πÄ‡∏õ‡∏•‡πà‡∏≤', quantity: 1, unit_price: 10 }
    ]
  },
  {
    customer_name: '‡∏Ñ‡∏ô‡∏£‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏´‡∏ß‡∏≤‡∏ô',
    customer_phone: '088-901-2345',
    customer_address: '258 ‡∏ñ‡∏ô‡∏ô‡∏ß‡∏¥‡∏†‡∏≤‡∏ß‡∏î‡∏µ ‡πÅ‡∏Ç‡∏ß‡∏á‡∏™‡∏≤‡∏°‡πÄ‡∏™‡∏ô‡∏ô‡∏≠‡∏Å ‡πÄ‡∏Ç‡∏ï‡∏´‡πâ‡∏ß‡∏¢‡∏Ç‡∏ß‡∏≤‡∏á ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10310',
    status: 'delivered',
    notes: '‡∏´‡∏ß‡∏≤‡∏ô‡∏ô‡πâ‡∏≠‡∏¢‡∏´‡∏ô‡πà‡∏≠‡∏¢',
    items: [
      { menu_item_name: '‡∏ö‡∏±‡∏ß‡∏•‡∏≠‡∏¢‡∏ô‡πâ‡∏≥‡∏Ç‡∏¥‡∏á', quantity: 2, unit_price: 30 },
      { menu_item_name: '‡πÄ‡∏â‡∏≤‡∏Å‡πä‡∏ß‡∏¢‡∏î‡∏≥', quantity: 1, unit_price: 25 },
      { menu_item_name: '‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÇ‡∏õ‡∏£‡πà‡∏á', quantity: 1, unit_price: 20 }
    ]
  },
  {
    customer_name: '‡∏≠‡∏≠‡∏ü‡∏ü‡∏¥‡∏®‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå',
    customer_phone: '089-012-3456',
    customer_address: '369 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏≤‡∏ó‡∏£ ‡πÅ‡∏Ç‡∏ß‡∏á‡∏¢‡∏≤‡∏ô‡∏ô‡∏≤‡∏ß‡∏≤ ‡πÄ‡∏Ç‡∏ï‡∏™‡∏≤‡∏ó‡∏£ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10120',
    status: 'pending',
    notes: '‡∏™‡πà‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏ü‡∏ü‡∏¥‡∏® ‡∏ä‡∏±‡πâ‡∏ô 15',
    items: [
      { menu_item_name: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏•‡πà‡∏≠‡∏á', quantity: 3, unit_price: 65 },
      { menu_item_name: '‡∏Å‡∏≤‡πÅ‡∏ü‡πÄ‡∏¢‡πá‡∏ô', quantity: 3, unit_price: 35 }
    ]
  },
  {
    customer_name: '‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÉ‡∏´‡∏ç‡πà',
    customer_phone: '090-123-4567',
    customer_address: '741 ‡∏ñ‡∏ô‡∏ô‡∏£‡∏≤‡∏°‡∏Ñ‡∏≥‡πÅ‡∏´‡∏á ‡πÅ‡∏Ç‡∏ß‡∏á‡∏´‡∏±‡∏ß‡∏´‡∏°‡∏≤‡∏Å ‡πÄ‡∏Ç‡∏ï‡∏ö‡∏≤‡∏á‡∏Å‡∏∞‡∏õ‡∏¥ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10240',
    status: 'confirmed',
    notes: '‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö 6 ‡∏Ñ‡∏ô',
    items: [
      { menu_item_name: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏Å‡∏∏‡πâ‡∏á', quantity: 3, unit_price: 89 },
      { menu_item_name: '‡∏ú‡∏±‡∏î‡πÑ‡∏ó‡∏¢‡∏Å‡∏∏‡πâ‡∏á‡∏™‡∏î', quantity: 2, unit_price: 95 },
      { menu_item_name: '‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏Å‡∏∏‡πâ‡∏á', quantity: 2, unit_price: 120 },
      { menu_item_name: '‡πÅ‡∏Å‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏´‡∏ß‡∏≤‡∏ô‡πÑ‡∏Å‡πà', quantity: 1, unit_price: 85 },
      { menu_item_name: '‡∏ô‡πâ‡∏≥‡∏°‡∏∞‡∏ô‡∏≤‡∏ß‡πÇ‡∏ã‡∏î‡∏≤', quantity: 6, unit_price: 35 }
    ]
  }
];

async function createTestOrders() {
  try {
    console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö...');

    for (let i = 0; i < testOrders.length; i++) {
      const orderData = testOrders[i];
      
      // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°
      const total_amount = orderData.items.reduce((sum, item) => 
        sum + (item.unit_price * item.quantity), 0
      );

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå
      const { data: order, error: orderError } = await supabase
        .from('orders')
        .insert([{
          customer_name: orderData.customer_name,
          customer_phone: orderData.customer_phone,
          delivery_address: orderData.customer_address,
          status: orderData.status,
          total_amount,
          notes: orderData.notes,
          created_at: new Date(Date.now() - (i * 3600000)).toISOString() // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô
        }])
        .select()
        .single();

      if (orderError) {
        console.log(`‚ùå Error creating order for ${orderData.customer_name}:`, orderError.message);
        continue;
      }

      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå
      for (const item of orderData.items) {
        const { error: itemError } = await supabase
          .from('order_items')
          .insert([{
            order_id: order.id,
            menu_item_name: item.menu_item_name,
            quantity: item.quantity,
            unit_price: item.unit_price,
            total_price: item.unit_price * item.quantity
          }]);

        if (itemError) {
          console.log(`‚ùå Error adding order item for ${item.menu_item_name}:`, itemError.message);
        }
      }

      console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå ${orderData.customer_name} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (${orderData.status}) - ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° ‡∏ø${total_amount}`);
    }

    console.log('üéâ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
    console.log(`üìä ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${testOrders.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
    const statusCount = testOrders.reduce((acc, order) => {
      acc[order.status] = (acc[order.status] || 0) + 1;
      return acc;
    }, {});
    
    console.log('üìà ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå:');
    Object.entries(statusCount).forEach(([status, count]) => {
      console.log(`   ${status}: ${count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    });
    
  } catch (error) {
    console.error('üí• Error creating test orders:', error);
  }
}

// ‡∏£‡∏±‡∏ô‡∏ñ‡πâ‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
if (require.main === module) {
  createTestOrders();
}

module.exports = { createTestOrders };